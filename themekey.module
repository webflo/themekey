<?php
// $Id$

require_once(drupal_get_path('module', 'themekey') .'/themekey_base.inc');
foreach (variable_get('themekey_modules', array('themekey.node')) as $module) {
  require_once(drupal_get_path('module', 'themekey') .'/modules/'. $module .'.inc');
}

/**
 * Implementation of hook_theme()
 */
function themekey_theme() {
  return array(
    'themekey_table' => array(
      'arguments' => array('form' => NULL),
    )
  );
}

/**
 * Implementation of hook_perm().
 */
function themekey_perm() {
  return array('administer theme assignments', 'administer themekey settings');
}

/**
 * Implementation of hook_menu().
 */
function themekey_menu() {
  $items = array();
  $items['admin/settings/themekey'] = array(
    'title' => 'ThemeKey',
    'description' => 'Map themes to Drupal paths or object properties.',
    'access callback' => 'user_access',
    'access arguments' => array('administer theme assignments'),
    'file' => 'themekey_admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_themekey_paths_form')
  );
  $items['admin/settings/themekey/paths'] = array(
    'title' => 'Paths',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0
  );
  $items['admin/settings/themekey/properties'] = array(
    'title' => 'Properties',
    'access callback' => 'user_access',
    'access arguments' => array('administer theme assignments'),
    'file' => 'themekey_admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_themekey_properties_form'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1
  );
  $items['admin/settings/themekey/settings'] = array(
    'title' => 'Settings',
    'access callback' => 'user_access',
    'access arguments' => array('administer themekey settings'),
    'file' => 'themekey_admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_themekey_settings_form'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5
  );
  $items['admin/settings/themekey/settings/general'] = array(
    'title' => 'General',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0
  );

  return $items;
}

/**
 * Implementation of hook_themekey_properties().
 */
function themekey_themekey_properties() {
  return _themekey_invoke_modules('themekey_properties');
}

/**
 * Implementation of hook_themekey_paths().
 */
function themekey_themekey_paths() {
  return _themekey_invoke_modules('themekey_paths');
}

/**
 * Implementation of hook_init().
 */
function themekey_init() {
  global $custom_theme;

  $theme = NULL;
  // Internal Drupal path
  $theme = _themekey_match_paths($_GET['q']);
  // Aliased Drupal path
  if (!$theme) {
    $offset = (variable_get('clean_url', 0) ? 0 : 3) + strlen(base_path());
    $alias_uri = substr(request_uri(), $offset);
    // TODO: locale rewrite
    $theme = _themekey_match_paths($alias_uri);
  }
  
  // We have a matching theme, apply it
  if ($theme && $theme != 'default') {
    $custom_theme = $theme;
    init_theme();
  }
}
